name: CI

on:
  pull_request:
  push:
    branches:
      - 'master'
      - 'starling-v*-release'
      - 'v*-release'
    tags:
      - 'v*'
      - 'starling-v*'

jobs:

  ubuntu-codecov:
    runs-on: ubuntu-latest
    container: ubuntu:18.04

    steps:

      - name: Setup container
        run: |
          apt-get update
          apt-get install -y gpg wget curl software-properties-common unzip
          add-apt-repository -y ppa:git-core/ppa
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - \
            | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
          echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ bionic-rc main' \
            | tee -a /etc/apt/sources.list.d/kitware.list >/dev/null
          apt-get update
          apt-get install -y git cmake build-essential clang llvm

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
          ssh-key: ${{ secrets.SSH_KEY }}

      - name: Run build
        env:
          CC: clang
          CXX: clang++
          TESTENV: codecov
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORGANIZATION: swift-nav
          SONAR_PROJECT_KEY: swift-nav_libswiftnav-private
          SONAR_PROJECT_NAME: libswiftnav-private
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_SCANNER_VERSION: 4.2.0.1873

        run: |
          bash ./ci-build.sh

  windows:
    strategy:
      matrix:
        include:
          - {env: "MSVC", arch: "Win32"}
          - {env: "MSVC", arch: "x64"}
          - {env: "MinGW"}

    runs-on: windows-2019

    steps:

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          submodules: recursive
          ssh-key: ${{ secrets.SSH_KEY }}

      - name: Install CMake
        run: |
          choco install -y --no-progress cmake

      - name: Downgrade MinGW to 6.4.0 (MinGW)
        if: matrix.env == 'MinGW'
        run: |
          choco install -y --no-progress --allow-downgrade --version=6.4.0 mingw

      - name: Install msys2 packages (MinGW)
        if: matrix.env == 'MinGW'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: git base-devel
          update: true

      - name: Run build (MSVC)
        if: matrix.env == 'MSVC'
        env:
          CMAKE_GENERATOR: "Visual Studio 16 2019"
        run: |
          cmake -G "$env:CMAKE_GENERATOR" -A ${{ matrix.arch }} -S . -B build;
          cmake --build build --config Release;
          bash -c "ls -la ./build/Release/swiftnav.lib || exit 1"

      - name: Run build (MinGW)
        if: matrix.env == 'MinGW'
        env:
          CMAKE_GENERATOR: "MinGW Makefiles"
          CC: gcc
          CXX: g++
        run: |
          cmake -B build -S . -G "$env:CMAKE_GENERATOR";
          cmake --build build

  unix:
    strategy:
      matrix:
        include:
          - {cc: "gcc-6", cxx: "g++-6", test_suite: "unit",
             package: "gcc-6 g++-6", runs_on: "ubuntu-latest", container: "ubuntu:18.04"}
          - {cc: "clang-6.0", cxx: "clang++-6.0", test_suite: "lint",
             package: "clang-6.0 libc++-dev libc++abi-dev clang-format-6.0 clang-tidy-6.0",
             runs_on: "ubuntu-latest", container: "ubuntu:18.04"}
          - {cc: "gcc-11", cxx: "g++-11", test_suite: "unit",
             package: "gcc-11 g++-11", runs_on: "ubuntu-latest", container: "ubuntu:18.04"}
          - {cc: "clang", cxx: "clang++", test_suite: "unit",
             runs_on: "macos-11", container: ~}

    runs-on: ${{ matrix.runs_on }}
    container: ${{ matrix.container }}

    steps:

      - name: Setup container
        if: matrix.container == 'ubuntu:18.04'
        run: |
          apt-get update
          apt-get install -y gpg wget curl software-properties-common zip
          add-apt-repository ppa:ubuntu-toolchain-r/test -y
          add-apt-repository -y ppa:git-core/ppa
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null \
            | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
          echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ bionic-rc main' \
            | tee -a /etc/apt/sources.list.d/kitware.list >/dev/null
          apt-get update
          apt-get install -y libeigen3-dev libserialport-dev git cmake build-essential ${{ matrix.package }}

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          submodules: recursive
          ssh-key: ${{ secrets.SSH_KEY }}

      - name: Run build
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
          TEST_SUITE: ${{ matrix.test_suite }}
          TESTENV: c
        run: |
          bash ./ci-build.sh
